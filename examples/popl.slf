// POPL 2023 tutorial on SASyLF
// Exercise 1


terminals S

syntax
   n ::= 0 
     | S n

// The following are syntactic sugar only
  1 := S 0
  2 := S 1
  3 := S 2
  4 := S 3
  5 := S 4
  6 := S 5

judgment nat-eq: n = n

  ----- nat-eq
  n = n
  
      
judgment plus: n + n = n

  --------- plus-zero
  0 + n = n

  n1 + n2 = n3
  ---------------- plus-succ
  S n1 + n2 = S n3

// Exercise:
lemma three-plus-one:
    exists 1 + 1 = 2
	   pd1: 0 + S(0) = S(0) by rule plus-zero
    result: 1 + 1 = 2 by rule plus-succ on pd1
end lemma

theorem plus-total:
    forall n1
    forall n2
    exists n1 + n2 = n3 // n3 is free (at this point
    proof by induction on n1:
      case S n1' is // n1 := S n1', a fresh variable
        p': n1' + n2 = n3' by induction hypothesis on n1', n2
        proof by rule plus-succ on p' // implicitly n3 := S n3'
      end case
    end induction
end theorem
